From edf1c22441faef53c3000bdc1e777a14d1d33c1a Mon Sep 17 00:00:00 2001
From: Terry Lin <terry_lin@arcadyan.com.tw>
Date: Wed, 28 Oct 2015 17:01:25 +0800
Subject: [PATCH] Add callback function for 'discovery fail'

---
 pppd/plugins/pppoe/libpppoe.c | 12 ++++++++++++
 pppoecd/options.c             |  7 ++++++-
 pppoecd/pppd.h                |  1 +
 3 files changed, 19 insertions(+), 1 deletion(-)

diff --git a/pppd/plugins/pppoe/libpppoe.c b/pppd/plugins/pppoe/libpppoe.c
index 7e6f5a4..a2e7739 100644
--- a/pppd/plugins/pppoe/libpppoe.c
+++ b/pppd/plugins/pppoe/libpppoe.c
@@ -589,6 +589,26 @@ int session_connect(struct session *ses)
 	    tv.tv_usec = 0;
 
 	    get_time_ms(&begin_time);
+#if 0
+		/* Terry 20151028, create callback function for 'discovery fail' */
+		if (ipparam && atoi(ipparam) == 1) {
+			FILE *fp = fopen("/tmp/bsa_migration_detection_on", "r");
+			if (fp) {
+				fclose(fp);
+				unlink("/tmp/bsa_migration_detection_on");
+				if (ses->retransmits % 3 == 0) {
+					if (strlen(ppp_disc_fail_func) > 0) {
+						char buf[500];
+						sprintf(buf, "%.500s %d", ppp_disc_fail_func, ipparam);
+						info("=====(Executing external command - %s)=====\n", buf);
+						system(buf);
+						/* Terry 20151116, Turn off pppoecd */
+						kill_link = 1;
+					}	persist = 0;
+				}
+			}
+		}
+#endif
 again:
 	    ret = select(disc_sock+1, &in, NULL, NULL, &tv);
 	}
diff --git a/pppoecd/options.c b/pppoecd/options.c
index edebe43..edf1242 100755
--- a/pppoecd/options.c
+++ b/pppoecd/options.c
@@ -67,6 +67,7 @@ char	is_unnumber_ip = 0;	/* This parameter use for unnumber IP. by tallest */
 #endif
 char	ppp_disconnect_func[MAXFUNCLEN]; /* This is a function for dial on demand disconnection using. by tallest 0407 */
 char	ppp_auth_fail_func[MAXFUNCLEN]; /* Terry 20140826, create callback function for 'auth fail' */
+char	ppp_disc_fail_func[MAXFUNCLEN]; /* Terry 20151028, create callback function for 'discovery fail' */
 
 char *current_option;		/* the name of the option being parsed */
 int  privileged_option;		/* set iff the current option came from root */
@@ -102,7 +103,7 @@ parse_args(argc, argv)
     struct in_addr Laddr;
     //struct in_addr Naddr;
 
-    while ((opt = getopt(argc, argv, "dki:u:p:a:s:r:t:U:I:T:P:L:N:RnC:v:x:D:M:h:F:V:m:")) != -1) {
+    while ((opt = getopt(argc, argv, "dki:u:p:a:s:r:t:U:I:T:P:L:N:RnC:v:x:D:M:h:F:V:m:G:")) != -1) {
 	    switch (opt) {
 	    case 'd':
 		    debug = nodetach = 1;
@@ -215,6 +216,10 @@ parse_args(argc, argv)
 		case 'F':
 			strncpy(ppp_auth_fail_func, optarg, MAXFUNCLEN);
 			break;
+/* Terry 20151028, create callback function for 'discovery fail' */
+		case 'G':
+			strncpy(ppp_disc_fail_func, optarg, MAXFUNCLEN);
+			break;
 			
 	    default:
 		    fprintf(stderr, usage_string, argv[0]);
diff --git a/pppoecd/pppd.h b/pppoecd/pppd.h
index d655d03..fe5caed 100644
--- a/pppoecd/pppd.h
+++ b/pppoecd/pppd.h
@@ -298,6 +298,7 @@ extern char    is_unnumber_ip;  /* This parameter use for unnumber IP. by talles
 #define MAXFUNCLEN	256 //by tallest 0407
 extern char	ppp_disconnect_func[MAXFUNCLEN];	//by tallest 0407
 extern char ppp_auth_fail_func[MAXFUNCLEN];		/* Terry 20140826, create callback function for 'auth fail' */
+extern char	ppp_disc_fail_func[MAXFUNCLEN];		/* Terry 20151028, create callback function for 'discovery fail' */
 /*
  * Values for phase.
  */
-- 
1.8.2.1

